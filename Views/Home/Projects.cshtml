@model ProjectsModal;

@{
    ViewData["Title"] = "Projects";
}

<h3>Projects</h3>

    ﻿@* datatables *@




<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/2.0.3/css/dataTables.bootstrap5.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/bbbootstrap/libraries@main/choices.min.css">
<script src="https://cdn.jsdelivr.net/gh/bbbootstrap/libraries@main/choices.min.js"></script>


<style>
    .page-item.disabled .page-link {
        color: black !important;
    }

    #empTable_wrapper {
        margin: 0 auto; /* Center DataTable horizontally */
        max-width: 90%; /* Set maximum width for DataTable */
    }

    #empDetailTable {
        margin: 0 auto; /* Center DataTable horizontally */
        max-width: 90%; /* Set maximum width for DataTable */
    }

    .hidden-column {
        visibility: hidden !important;
    }

    .invalid-feedback {
        color: red;
    }

    .page-item.active .page-link {
        background-color: black !important;
        border: black;
    }

    #example th {
        text-align: center;
    }



    #example td {
        text-align: center;
    }


    #example tbody tr td:first-child {
        width: 100px; /* Adjust the width as needed */
    }

    #empTable td {
        text-align: center;
    }

    #empTable th {
        text-align: center;
    }

    .mt-100 {
        margin-top: 100px
    }

    .select {
        color: #514B64;
    }

    .box {
        min-height: 140px;
        height: 20vh;
        max-height: 200px;
        max-width: 320px;
        width: 20vw;
        min-width: 250px;
    }

    .box {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

        .box i {
            color: #009cff;
        }

        .box:hover, .box:hover h4, .box:hover i {
            background-color: #009cff !important;
            color: aliceblue !important;
        }

    .flex-center {
        display: flex;
        justify-content: space-evenly;
        align-items: center;
        text-align: center;
    }

    #assign .dt-column-order {
        display: none;
    }

    .asd {
        display: flex !important;
        justify-content: center !important;
        align-items: center !important;
    }

    .custom-btn {
        width: 80px; /* Adjust the width as needed */
    }
</style>


@* Cards *@
<div class="container-fluid px-4 py-4">
    <div class="row g-4 d-flex justify-content-center align-items-center">
        <div class="col-sm-6 col-xl-4 px-4">
            <div class="bg-light rounded d-flex align-items-center justify-content-evenly p-4 box">
                <i class="fa fa-chart-line fa-3x"></i>
                <div class="ms-3">
                    <p class="mb-2">Total Projects</p>
                    <h4 class="mb-0">@(Model.CompletedProjects + Model.RunningProjects)</h4>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-4 px-4">
            <div class="bg-light rounded d-flex align-items-center justify-content-evenly p-4 box">
                <i class="fa fa-chart-bar fa-3x"></i>
                <div class="ms-3">
                    <p class="mb-2">Running Projects</p>
                    <h4 class="mb-0">@(Model.RunningProjects)</h4>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-4 px-4">
            <div class="bg-light rounded d-flex align-items-center justify-content-evenly p-4 box">
                <i class="fa fa-chart-area fa-3x"></i>
                <div class="ms-3">
                    <p class="mb-2">Completed Projects</p>
                    <h4 class="mb-0">@(Model.CompletedProjects)</h4>
                </div>
            </div>
        </div>

    </div>
</div>



@* Table Start *@
<div class="pt-4 table-responsive">
    <table id="example" class="table table-striped table-bordered " style="width:100%">
        <thead>
            <tr class="bg-dark">
                <th class="text-white">ProjectId</th>
                <th class="text-white" style="width: 80rem; ">ProjectName</th>

                <th class="text-white" style="width: 70rem; ">Status</th>
                <th class="text-white" style="width: 100rem; ">Actions</th>

            </tr>
        </thead>
        <tbody id="dataRows ">

            @foreach (var project in Model.Projects)
            {
                <tr class="row123">
                    <td>@project.ProjectId</td>
                    <td>@project.ProjectName</td>

                    <td>@project.Status</td>
                    <td class="">
                        <i class="fa fa-edit fa-lg edit-icon pe-5 editbtn" style="cursor:pointer;" aria-hidden="true" data-toggle="modal" data-target="#EditModal"></i>
                        <i class="fa fa-trash fa-lg delete-icon pe-5 delbtn" style="cursor:pointer;" aria-hidden="true" data-toggle="modal" data-target="#deleteModal" @* onclick="Delete()" *@></i>
                        @if (project.Status == "Completed")
                        {
                            <button type="button" class="btn empBtn" style="color:gold" data-toggle="modal" data-target="#empRating" onclick="EmployeeRating(@project.ProjectId)">
                                <i class="fa fa-star"></i>
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn" style="color:grey ;border:none;" disabled>
                                <i class="fa fa-star"></i>
                            </button>
                        }

                    </td>
                </tr>
            }

        </tbody>

    </table>



    @* snackbar *@
    <div id="snackbar" class="text-white text-center position-absolute bottom-0 start-50 translate-middle-x p-2 rounded-3 mx-5 mb-4" style="display: none; z-index:1; width:50%">
    </div>


    <!-- Add Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Project Details</h5>
                    <button type="button" id="close" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="mb-3 ">
                            <label for="recipient-name" class="col-form-label">Project Name:</label>
                            <input type="text" class="form-control" id="Project_Name">
                            <div class="invalid-feedback" id="projectNameError"></div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 pt-1">
                                <label for="start_date" class="form-label">Start Date:</label>
                                <input type="date" class="form-control" id="start_date" name="start_date">
                            </div>
                            <div class="col-md-6 pt-1">
                                <label for="end_date" class="form-label">End Date:</label>
                                <input type="date" class="form-control" id="end_date" name="end_date">
                            </div>
                        </div>
                        <div class="invalid-feedback" id="dateError"></div>
                        <div class="row d-flex align-items-center justify-content-center pt-4 select">
                            <div class="col-auto ps-2">
                                <label for="choices-multiple-remove-button">Department:</label>
                            </div>
                            <div class="col">

                                <select id="single" class="form-select" placeholder="Select Department">
                                    @foreach (var item in Model.Departments)
                                    {
                                        <option value="@item[0]">@item[1]</option>
                                    }
                                </select>

                            </div>
                        </div>


                        <div class="row d-flex align-items-center justify-content-center pt-4 select">
                            <div class="col-auto ps-2">
                                <label for="choices-multiple-remove-button">Skills:</label>
                            </div>
                            <div class="col">

                                <select id="choices-multiple-remove-button" class="form-select " placeholder="Select skills" multiple>
                                    @foreach (var item in Model.Skills)
                                    {
                                        <option value="@item[0]">@item[1]</option>
                                    }
                                </select>

                            </div>
                            <div class="invalid-feedback" id="SkillError"></div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" id="close1" class="btn btn-secondary addClose" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="addBtn">Add</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Add Modal close -->
    <!-- Filter Modal -->
    <div class="modal fade" id="filterModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Filter</h5>
                    <button type="button" id="close" class="btn-close" data-dismiss="modal" aria-label="Close"></button>

                </div>
                <div class="modal-body">
                    <!-- First row: Dropdown for department -->
                    <div class="form-group">
                        <label for="departmentSelect">Department:</label>
                        <select class="form-control" id="departmentSelect">
                            <option value="">Select Department</option>
                            <option value="dept1">Mobility</option>
                            <option value="dept2">Integrated</option>
                            <option value="dept3">Agriculture</option>
                            <option value="dept4">Research and Development</option>
                        </select>

                    </div>

                    <!-- Second row: Dropdown for status -->
                    <div class="form-group">
                        <label for="statusSelect">Status:</label>
                        <select class="form-control" id="statusSelect_filter">
                            <option value="">Select Status</option>
                            <option value="active">Active</option>
                            <option value="inactive">Inactive</option>
                        </select>
                    </div>

                    <!-- Third row: Date inputs for start and end date -->
                    <div class="form-group">
                        <label for="startDate">Start Date:</label>
                        <input type="date" class="form-control" id="startDate">
                    </div>
                    <div class="form-group">
                        <label for="endDate">End Date:</label>
                        <input type="date" class="form-control" id="endDate">
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" id="fclose1" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Apply</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Filter Modal close-->
    @* delete-modal *@
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="updateModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this item?</p>
                    <input type="text" id="confirmInput" class="form-control" placeholder="Type 'CONFIRM' to proceed">
                </div>
                <div class="d-flex justify-content-center">
                    <div id="deleteProjectError" class="text-danger"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" id="deleteButton" onclick=" Delete();" disabled>Delete</button>
                </div>
            </div>
        </div>
    </div>
    @* delete-modal close *@






    @*  EmpRating modal open *@

    <div class="modal fade" id="empRating" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Employee Rating Based On Project Performance</h5>
                    <button type="button" id="closeStar" class="btn-close ratingClose" data-dismiss="modal" aria-label="Close"></button>
                </div>

                <div id="prId"></div>
                <div class="pt-4 table-responsive">
                    <table id="empTable" class="table table-striped table-bordered custom-width-table" style="width:100%">
                        <thead>
                            <tr class="bg-dark">
                                <th class="text-white">Employee Id</th>
                                <th class="text-white">Employee Name</th>
                                <th class="text-white">Employee Rating</th>

                            </tr>
                        </thead>
                        <tbody id="dataRows">
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    @*  <button type="button" id="close1" class="btn btn-secondary   " data-dismiss="modal">Close</button> *@
                    <button type="button" class="btn btn-primary" id="addEmpRating">Add</button>
                </div>
            </div>
        </div>
    </div>


    @*  EmpRating modal close *@

    @*  EmpDetail modal open *@
    @* <div class="modal fade" id="empDetail" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true"> 
        <div class="modal-dialog modal modal-dialog-centered modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Employee Detail Based on Project</h5>
                    <button type="button" id="closeStar" class="btn-close ratingClose" data-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Form fields for editing project -->
                    <form id="editProjectForm">
                        <div class="row mb-2">

                            <div class="col">
                                <div class="form-group">
                                    <label for="empProjectName">Project Name:</label>
                                    <input type="text" class="form-control" id="empProjectName" name="empProjectName" disabled>
                                </div>

                            </div>
                    </form>
                </div>
                <div id="prId"></div>
                <div class="pt-4 table-responsive">
                    <table id="empDetailTable" class="table table-striped table-bordered custom-width-table" style="width:100%">
                        <thead>
                            <tr class="bg-dark">
                                <th class="text-white">Employee Name</th>
                                <th class="text-white">Start Date</th>
                                <th class="text-white">End Date</th>
                                <th class="text-white">Project Role</th>
                                <th class="text-white">Skills</th>
                                <th class="text-white">Rating</th>
                            </tr>
                        </thead>
                        <tbody id="dataRows">
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>*@


    @*  EmployeeDetail modal close *@
    <div class="modal fade" id="Editmodal" tabindex="-1" role="dialog" aria-labelledby="EditModalLabel" aria-hidden="true">
        <div class="modal-dialog modal modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="EditModalLabel">Edit Project</h5>
                    <button type="button" class=" btn-close-update btn-close" data-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Form fields for editing project -->
                    <form id="editProjectForm">
                        <div class="row mb-2">
                            <div class="col">
                                <div class="form-group">
                                    <label for="projectId">Project ID:</label>
                                    <input type="text" class="form-control" id="projectId" name="projectId" readonly>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form-group">
                                    <label for="projectName">Project Name:</label>
                                    <input type="text" class="form-control" id="projectName" name="projectName">
                                </div>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col">
                                <div class="form-group">
                                    <label for="startDate">Start Date:</label>
                                    <input type="date" class="form-control" id="startDate1" name="startDate">
                                </div>
                            </div>
                            <div class="col">
                                <div class="form-group">
                                    <label for="endDate">End Date:</label>
                                    <input type="date" class="form-control" id="endDate1" name="endDate">
                                </div>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col">
                                <div class="form-group">
                                    <label for="status">Status:</label>
                                    <select class="form-control" id="statusSelect1">
                                        <option value="Pending">Pending</option>
                                        <option value="Running">Running</option>
                                        <option value="Completed">Completed</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col">
                                <div class="form-group">
                                    <label for="single2">Department:</label>
                                    <select id="single2" class="form-select" placeholder="Select department">
                                        @foreach (var item in Model.Departments)
                                        {
                                            <option value="@item[0]">@item[1]</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <div class="form-group">
                                    <label for="choices-multiple-remove-button">Skills:</label>
                                    <select id="update-choices-multiple-remove-button" class="form-select" placeholder="Select skills" multiple>
                                        @foreach (var item in Model.Skills)
                                        {
                                            <option value="@item[0]">@item[1]</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="editSave" class="btn btn-primary align-items-end">Save Changes</button>
                </div>
            </div>
        </div>
    </div>


</div>
<script src="https://code.jquery.com/jquery-3.7.1.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.datatables.net/2.0.3/js/dataTables.js"></script>
<script src="https://cdn.datatables.net/2.0.3/js/dataTables.bootstrap5.js"></script>
<script>

    $(document).ready(function () {

        new DataTable('#example');
        new DataTable('#empTable');

        // Add button
        var AddButton = $('<button>', {
            class: 'btn btn-dark custom-btn Add',
            text: 'Add Project',
            style: 'margin:0; width:auto;'
        });

        // Filter button
        var FilterButton = $('<button>', {
            class: 'btn btn-danger custom-btn filter',
            text: 'Filter',
            style: 'margin-left:1rem;'
        });

        // filter modal show
        $('#modalfilter').click(function () {
            $('#filterModal').modal('show');
        });

        $('.empBtn').click(function () {
            $('#empRating').modal('show');
        });

        FilterButton.click(function () {
            $('#filterModal').modal('show');
        });

        // Add modal show
        AddButton.click(function () {
            $('#exampleModal').modal('show');
            $('#choices-multiple-remove-button').empty();

        });

        // multiple select
        var multipleCancelButton = new Choices('#choices-multiple-remove-button', {
            removeItemButton: true,
        });

        var multipleCancelButton = new Choices('#update-choices-multiple-remove-button', {
            removeItemButton: true,
        });

        // close Modal
        $('.btn-close').click(function () {
            $('#exampleModal form')[0].reset();
            $('#SkillError').hide();
            $('#projectNameError').hide();
            $('#deleteModal').modal('hide');
            $('#Editmodal').modal('hide');
            $('#exampleModal').modal('hide');
            $('#filterModal').modal('hide');
            $('#empRating').modal('hide');
            $('#confirmInput').val('');

            $('#dateError').hide();

        });

        $('.addClose').click(function () {
            $('#exampleModal form')[0].reset();
            $('#SkillError').hide();
            $('#projectNameError').hide();
            $('#deleteModal').modal('hide');
            $('#Editmodal').modal('hide');
            $('#exampleModal').modal('hide');
            $('#filterModal').modal('hide');
            $('#dateError').hide();
        });
        $('.btn-close-update').click(function (e) {

            $('#editProjectForm').trigger("reset");

        });




        //Additional changes for setting up datatable

        $('#example tbody').on('draw.dt', function () {
            $('#example tbody tr').each(function () {
                $(this).find('td:last-child').css('text-align', 'center');
            });
        });

        document.getElementById('dt-search-0').placeholder = 'Search something';
        $('label[for="dt-search-0"]').remove();
        $('#dt-search-0').parent().parent().removeClass('ms-auto');
        $('#dt-search-0').css({ 'width': '30rem', 'border': '1px solid black' });

        $('.dt-search').parent().parent().addClass('d-flex flex-row-reverse');
        $('#dt-length-0').parent().parent().removeClass('me-auto');
        $('.dt-search').prepend(AddButton);
        $('.dt-search').parent().css({ 'padding': '0' });
        $('.dt-length').append(FilterButton);
        $('.dt-length').parent().css({ 'padding': '0' });



        // Insert Project
        $("#addBtn").click(function () {
            var selectedSkills = $('#choices-multiple-remove-button').val();
            var skillString = selectedSkills.join(',');
            var projectName1 = $("#Project_Name").val();
            var startdate1 = $("#start_date").val();
            var enddate1 = $("#end_date").val();
            var departmentid1 = $('#single').val();
            $('#exampleModal').on('hidden.bs.modal', function () {
                $('#exampleModal form')[0].reset();
            });


            var projectval = {
                projectName: projectName1,
                startdate: startdate1,
                enddate: enddate1,
                departmentid: departmentid1,
                skillid: skillString
            };

            var startDate = new Date(startdate1);
            var endDate = new Date(enddate1);

            // Validate start date is not greater than end date
            if (startDate > endDate) {
                // Display error message or handle validation failure
                $('#dateError').text('StartDate is not greater than EndDate').show();
                return; // Stop further execution of the function
            }
            else {
                $('#dateError').hide();
            }
            if (projectName1 === '') {
                $('#projectNameError').text('Project Name is required').show();

            } else {
                $('#projectNameError').hide();
            }

            if (!skillString || skillString.length === 0) {
                $('#SkillError').text('Please select at least one skill').show();
                isValid = false;
            } else {
                $('#SkillError').hide();
            }

            $.ajax({
                url: '/Projects/AddProject',
                data: projectval,
                type: 'POST',
                success: function (result) {
                    location.reload();
                    $('#examplemodal').modal('hide');
                    showSnackbar("true", "Project Added Successfully");

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        });





        //Click on edit SaveChanges button
        $('#editSave').click(function (e) {
            e.preventDefault();
            var selectedSkills = $('#update-choices-multiple-remove-button').val();

            var skillId2 = selectedSkills.join(',');


            // var projectId = $(this).data('id');
            // alert(projectId);

            var projectId = $("#projectId").val();
            var projectName1 = $("#projectName").val();
            var status1 = $("#statusSelect1").val();
            var startDate1 = $("#startDate1").val();
            var endDate1 = $("#endDate1").val();
            var skillid1 = skillId2;
            var departmentId1 = $('#single2').val();


            console.log("Project Name: " + projectName1);
            console.log("Status: " + status1);
            console.log("Start Date: " + startDate1);
            console.log("End Date: " + endDate1);
            console.log("Skill ID: " + skillid1);
            console.log("Department ID: " + departmentId1);


            var formData = {
                projectId: projectId,
                projectName: projectName1,
                status: status1,
                startDate: startDate1,
                endDate: endDate1,
                skillid: skillid1,
                departmentId: departmentId1
            };


            if (status1 === "Completed") {
                $.ajax({
                    url: '/Projects/completeProject',
                    type: 'POST',
                    data: { projectId: projectId },
                    success: function (result) {

                        location.reload();
                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }
            $.ajax({
                url: '/Projects/UpdateProject',
                type: 'POST',
                data: formData,
                success: function (result) {

                    location.reload();
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        });




        // Edit Button click
        $('#example').on('click', '.editbtn', function (e) {
            $('#Editmodal').modal('show');
            var row = $(this).closest('tr');
            var projectId = row.find('td:eq(0)').text();


            $.ajax({
                url: '/Projects/GetDepartmentByProjectId',
                type: 'POST',
                data: { projectId: projectId },
                success: function (result) {
                    $('#Editmodal').modal('show');
                    var departmentId = result.departmentId;

                    // $('#projectId').val($this.closest('tr').data('id'));
                    $('#projectId').val(row.find('td:eq(0)').text());
                    $('#projectName').val(row.find('td:eq(1)').text());
                    var statusText = row.find('td:eq(2)').text();

                    $('#statusSelect1 option').each(function () {
                        if ($(this).text() === statusText) {
                            $(this).prop('selected', true);
                            return false;
                        }
                    });
                    $('#single2').find('option[value="' + departmentId + '"]').attr('selected', 'selected');
                    var formattedStartDate = formatDate(result.startDate);
                    var formattedEndDate = formatDate(result.endDate);
                    $('#startDate1').val(formattedStartDate);
                    $('#endDate1').val(formattedEndDate);
                    var skills = result.skillid;
                    if (skills) {
                        var skillIds = skills.split(',');
                        skillIds.forEach(function (skillId) {
                            console.log("Processing skillId:", skillId);
                            multipleCancelButton.setChoiceByValue(skillId);
                        });
                    } else {
                        console.error(skills);
                        console.error("SkillsId is undefined or null.");
                    }

                },
                error: function (err) {
                    alert('Error fetching department: ' + err.responseText);
                }
            });
        });

        function formatDate(dateString) {
            var dateParts = dateString.split("-");
            var formattedDate = dateParts[2] + "-" + dateParts[1] + "-" + dateParts[0];
            return formattedDate;
        }

        //click on Delete icon
        $('.delbtn').click(function () {
            var row = $(this).closest('tr');
            var projectId = row.find('td:eq(0)').text();
            // var projectId = row.find('td:eq(0)').text();
            $('#deleteModal').on('hidden.bs.modal', function () {
                $('#confirmInput').val('');
            });
            $('#deleteModal').modal('show');
            $('#confirmInput').on('input', function () {
                var confirmValue = $(this).val();
                if (confirmValue.trim() === "CONFIRM") {
                    $("#deleteButton").removeAttr("disabled");
                    $("#deleteButton").addClass('btn-danger');
                } else {
                    $("#deleteButton").attr("disabled", "disabled");
                    $("#deleteButton").removeClass('btn-danger');
                }
            });
            //click on Delete button
            $('#deleteButton').click(function () {
                var confirmValue = $('#confirmInput').val().trim().toUpperCase();
                if (confirmValue === "CONFIRM") {
                    $.ajax({
                        url: "/Projects/DeleteProject",
                        type: 'POST',
                        data: {
                            projectId: projectId
                        },
                        success: function (result) {
                            if (result.success) {
                                $.ajax({
                                    url: "/Projects/completeProject",
                                    type: 'POST',
                                    data: {
                                        projectId: projectId
                                    },
                                    success: function (result) {
                                        i
                                        location.reload();
                                    },
                                    error: function (errorMessage) {
                                        alert('Error deleting project.');
                                    }
                                });
                            } else {
                                $("deleteProjectError").text(result.success);
                            }
                        },
                        error: function (errorMessage) {
                            $('#deleteModal').modal('hide');
                            alert('Please complete the project.');
                        }
                    });
                }
            });
        });


        //click on Star Button for empRating
        $('#example').on('click', '.empBtn', function (e) {
            e.preventDefault();
            var row = $(this).closest('tr');
            var projectId = row.find('td:eq(0)').text();
            $.ajax({
                url: '/Projects/GetEmployeeById',
                data: { projectId: projectId },
                type: 'POST',
                success: function (result) {
                    if (result.error) {
                        alert(result.error);
                        return;
                    }
                    AddButton.hide();
                    FilterButton.hide();
                    $('#dt-search-1').css({ 'width': '27rem', 'border': '1px solid black' });
                    $('#dt-length-1').css({ 'margin-left': '1rem' });
                    $('#empTable tbody').empty();
                    console.log(result.data);
                    var table = $('#empTable').DataTable();
                    table.clear().draw();
                    $.each(result.data, function (index, employeeDetails) {
                        var empid = employeeDetails.employeeId;
                        var empName = employeeDetails.employeeName;

                        var newRow = '<tr>' +
                            '<td>' + empid + '</td>' +
                            '<td>' + empName + '</td>' +
                            '<td>' +
                            '<select class="form-control" id="statusSelect2">' +
                            '<option value="0">0</option>' +
                            '<option value="1">1</option>' +
                            '<option value="2">2</option>' +
                            '<option value="3">3</option>' +
                            '<option value="4">4</option>' +
                            '<option value="5">5</option>' +
                            '<option value="6">6</option>' +
                            '<option value="7">7</option>' +
                            '<option value="8">8</option>' +
                            '<option value="9">9</option>' +
                            '<option value="10">10</option>' +
                            '</select>' +
                            '</td>' +
                            '</tr>';
                        // $('#empTable tbody').append(newRow);

                        table.row.add($(newRow)).draw(false);


                    });
                    $('#closeStar').click(function () {
                        var table123 = $('#empTable').DataTable();
                        table123.clear().draw();
                        $('#empTable tbody').empty();
                    });

                    $('#addEmpRating').on('click', function () {

                        var employeeIds = [];
                        var employeeRatings = [];


                        $('#empTable tbody tr').each(function () {
                            var empId = $(this).find('td:eq(0)').text();
                            var rating = $(this).find('#statusSelect2').val();

                            employeeIds.push(parseInt(empId));
                            employeeRatings.push(parseInt(rating));
                        });

                        $.ajax({
                            url: '/Projects/GiveRatingToEmployee',
                            data: {
                                projectId: projectId,
                                employeeIds: employeeIds,
                                employeeRatings: employeeRatings
                            },
                            type: 'POST',
                            success: function (response) {

                                $('#empRating').hide();
                                location.reload();
                            },
                            error: function (errormessage) {
                                alert('Error adding employee ratings: ' + errormessage.responseText);
                            }
                        });
                    });
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        });

        function showSnackbar(status, message) {
            console.log("snackbar");
            if (status === "true") {
                $('#snackbar').addClass('bg-success');
            } else {
                $('#snackbar').addClass('bg-danger');
            }
            var snackbar = document.getElementById("snackbar");
            snackbar.textContent = message;
            snackbar.style.display = "block";
            setTimeout(function () { snackbar.style.display = "none"; }, 3000);
        }


    });
    $('.row123').click(function (event) {
        // if ($(event.target).closest('.projectActions').length) {
        //     return;
        // }
        // Find the hidden td element containing projectId within the clicked row
        var projectId = $(this).find('td:first').text();
        var projectName = $(this).find('td:nth-child(2)').text();
        $('#empDetail').modal('show');

        console.log(projectId);

        $('#empProjectName').val(projectName);


        // if (!$(event.target).is('td')) {
        //     return;
        // }

        // var table = $('#empDetailTable').DataTable();
        // table.clear().draw();
        // $('#dt-search-2').css({ 'width': '27rem', 'border': '1px solid black', 'margin-right': '3.5rem' });
        // $('#dt-length-2').css({ 'margin-left': '3.5rem' });
        // $.ajax({
        //     url: '/Projects/EmpDetatilByProjectId',
        //     data: {
        //         projectId: projectId,
        //     },
        //     type: 'POST',
        //     success: function (response) {
        //         $.each(response, function (index, employeeDetails) {
        //             var newRowData = [
        //                 employeeDetails.empName,
        //                 employeeDetails.startDate,
        //                 employeeDetails.endDate,
        //                 employeeDetails.projectRole,
        //                 employeeDetails.skills.join(', '), // Assuming skills is an array
        //                 employeeDetails.rating
        //             ];
        //             console.log(employeeDetails.empName);
        //             console.log(employeeDetails.startDate);
        //             console.log(employeeDetails.endDate);
        //             console.log(employeeDetails.projectRole);
        //             console.log(employeeDetails.skills.join(', '),);
        //             console.log(employeeDetails.rating);
        //             table.row.add(newRowData).draw();
        //         });
        //     },
        //     error: function (errormessage) {
        //         alert('Error adding employee ratings: ' + errormessage.responseText);
        //     }
        // });



    });

</script>
